package org.eclipse.scout.orga.shared.text;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.page.AbstractTablePageData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "org.eclipse.scout.orga.client.text.TextTablePage", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class TextTablePageData extends AbstractTablePageData {

	private static final long serialVersionUID = 1L;

	@Override
	public TextTableRowData addRow() {
		return (TextTableRowData) super.addRow();
	}

	@Override
	public TextTableRowData addRow(int rowState) {
		return (TextTableRowData) super.addRow(rowState);
	}

	@Override
	public TextTableRowData createRow() {
		return new TextTableRowData();
	}

	@Override
	public Class<? extends AbstractTableRowData> getRowType() {
		return TextTableRowData.class;
	}

	@Override
	public TextTableRowData[] getRows() {
		return (TextTableRowData[]) super.getRows();
	}

	@Override
	public TextTableRowData rowAt(int index) {
		return (TextTableRowData) super.rowAt(index);
	}

	public void setRows(TextTableRowData[] rows) {
		super.setRows(rows);
	}

	public static class TextTableRowData extends AbstractTableRowData {

		private static final long serialVersionUID = 1L;
		public static final String key = "key";
		public static final String locale = "locale";
		public static final String text = "text";
		private String m_key;
		private String m_locale;
		private String m_text;

		public String getKey() {
			return m_key;
		}

		public void setKey(String newKey) {
			m_key = newKey;
		}

		public String getLocale() {
			return m_locale;
		}

		public void setLocale(String newLocale) {
			m_locale = newLocale;
		}

		public String getText() {
			return m_text;
		}

		public void setText(String newText) {
			m_text = newText;
		}
	}
}
