package org.eclipse.scout.orga.shared.user;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "org.eclipse.scout.orga.client.user.UserForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class UserFormData extends AbstractFormData {

	private static final long serialVersionUID = 1L;

	public AccountLocked getAccountLocked() {
		return getFieldByClass(AccountLocked.class);
	}

	public Password getPassword() {
		return getFieldByClass(Password.class);
	}

	public RoleTable getRoleTable() {
		return getFieldByClass(RoleTable.class);
	}

	public UserBox getUserBox() {
		return getFieldByClass(UserBox.class);
	}

	public static class AccountLocked extends AbstractValueFieldData<Boolean> {

		private static final long serialVersionUID = 1L;
	}

	public static class Password extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class RoleTable extends AbstractTableFieldBeanData {

		private static final long serialVersionUID = 1L;

		@Override
		public RoleTableRowData addRow() {
			return (RoleTableRowData) super.addRow();
		}

		@Override
		public RoleTableRowData addRow(int rowState) {
			return (RoleTableRowData) super.addRow(rowState);
		}

		@Override
		public RoleTableRowData createRow() {
			return new RoleTableRowData();
		}

		@Override
		public Class<? extends AbstractTableRowData> getRowType() {
			return RoleTableRowData.class;
		}

		@Override
		public RoleTableRowData[] getRows() {
			return (RoleTableRowData[]) super.getRows();
		}

		@Override
		public RoleTableRowData rowAt(int index) {
			return (RoleTableRowData) super.rowAt(index);
		}

		public void setRows(RoleTableRowData[] rows) {
			super.setRows(rows);
		}

		public static class RoleTableRowData extends AbstractTableRowData {

			private static final long serialVersionUID = 1L;
			public static final String id = "id";
			public static final String role = "role";
			public static final String assigned = "assigned";
			private String m_id;
			private String m_role;
			private Boolean m_assigned;

			public String getId() {
				return m_id;
			}

			public void setId(String newId) {
				m_id = newId;
			}

			public String getRole() {
				return m_role;
			}

			public void setRole(String newRole) {
				m_role = newRole;
			}

			public Boolean getAssigned() {
				return m_assigned;
			}

			public void setAssigned(Boolean newAssigned) {
				m_assigned = newAssigned;
			}
		}
	}

	public static class UserBox extends AbstractUserBoxData {

		private static final long serialVersionUID = 1L;
	}
}
