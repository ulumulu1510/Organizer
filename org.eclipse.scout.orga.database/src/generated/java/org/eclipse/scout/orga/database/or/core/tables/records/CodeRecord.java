/*
 * This file is generated by jOOQ.
*/
package org.eclipse.scout.orga.database.or.core.tables.records;


import javax.annotation.Generated;

import org.eclipse.scout.orga.database.or.core.tables.Code;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CodeRecord extends UpdatableRecordImpl<CodeRecord> implements Record6<String, String, Double, String, String, Boolean> {

    private static final long serialVersionUID = -897553298;

    /**
     * Setter for <code>core.CODE.ID</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>core.CODE.ID</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>core.CODE.TYPE_ID</code>.
     */
    public void setTypeId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>core.CODE.TYPE_ID</code>.
     */
    public String getTypeId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>core.CODE.ORDER</code>.
     */
    public void setOrder(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>core.CODE.ORDER</code>.
     */
    public Double getOrder() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>core.CODE.ICON</code>.
     */
    public void setIcon(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>core.CODE.ICON</code>.
     */
    public String getIcon() {
        return (String) get(3);
    }

    /**
     * Setter for <code>core.CODE.VALUE</code>.
     */
    public void setValue(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>core.CODE.VALUE</code>.
     */
    public String getValue() {
        return (String) get(4);
    }

    /**
     * Setter for <code>core.CODE.ACTIVE</code>.
     */
    public void setActive(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>core.CODE.ACTIVE</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, Double, String, String, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, Double, String, String, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Code.CODE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Code.CODE.TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Code.CODE.ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Code.CODE.ICON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Code.CODE.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return Code.CODE.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getIcon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component6() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getIcon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeRecord value2(String value) {
        setTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeRecord value3(Double value) {
        setOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeRecord value4(String value) {
        setIcon(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeRecord value5(String value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeRecord value6(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CodeRecord values(String value1, String value2, Double value3, String value4, String value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CodeRecord
     */
    public CodeRecord() {
        super(Code.CODE);
    }

    /**
     * Create a detached, initialised CodeRecord
     */
    public CodeRecord(String id, String typeId, Double order, String icon, String value, Boolean active) {
        super(Code.CODE);

        set(0, id);
        set(1, typeId);
        set(2, order);
        set(3, icon);
        set(4, value);
        set(5, active);
    }
}
